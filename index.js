(function(r,g,d,n,t,a){"use strict";const h=function(){const[e,l]=n.React.useState(a.storage.enableReadAll??!0),o=function(){a.storage.enableReadAll=!e,l(!e)};return n.React.createElement(n.ReactNative.View,{style:{flex:1,justifyContent:"center",alignItems:"center"}},n.React.createElement(n.ReactNative.Text,{style:{fontSize:16,fontWeight:"bold",marginBottom:10}},"Enable Read All Messages"),n.React.createElement(n.ReactNative.Switch,{value:e,onValueChange:o}))};let i;const R=function(){try{const e=d.findByProps("ack","ackMessage");if(console.log("[Read All] ChannelActions:",e),!e){console.error("[Read All] ChannelActions is undefined"),t.showToast("Failed to find ChannelActions.",{type:"danger"});return}if(Object.keys(e).forEach(function(o){console.log(`[Read All] ChannelActions function: ${o}`)}),!e?.ack){console.error("[Read All] 'ack' function not found in ChannelActions."),t.showToast("Failed to find 'ack' function in ChannelActions.",{type:"danger"});return}const l=d.findByProps("Guilds","GuildsList");if(!l?.Guilds){console.error("[Read All] 'Guilds' component not found in GuildsComponent:",l),t.showToast("Failed to find the server list UI.",{type:"danger"});return}a.storage.enableReadAll===void 0&&(a.storage.enableReadAll=!0),i=g.after("Guilds",l,function(o,s){let[b]=o;if(!s?.props?.children||!a.storage.enableReadAll)return s;const v=n.React.createElement(n.ReactNative.TouchableOpacity,{onPress:function(){try{const c=d.findByProps("getGuilds")?.getGuilds?.();if(!c){console.error("[Read All] No guilds found.");return}Object.values(c).forEach(function(E){const f=E.channels;f&&Object.values(f).forEach(function(u){u.is_read||(console.log(`[Read All] Marking channel ${u.id} as read.`),e.ack?.(u.id))})}),t.showToast("All messages marked as read!",{type:"success"})}catch(c){console.error("[Read All] Error marking messages as read:",c),t.showToast("Error marking messages as read.",{type:"danger"})}},style:{marginBottom:10,padding:10,backgroundColor:"#5865F2",borderRadius:8,alignItems:"center"}},n.React.createElement(n.ReactNative.Text,{style:{color:"#FFFFFF",fontWeight:"bold"}},"\u{1F4E9} Read All"));return s.props.children.unshift(v),s}),console.log("[Read All] Plugin loaded successfully.")}catch(e){console.error("[Read All] Plugin Load Error:",e),t.showToast("Plugin Load Failed!",{type:"danger"})}},A=function(){try{i&&(i(),t.showToast("Plugin Successfully Unloaded!",{type:"success"}))}catch(e){console.error("[Read All] Unload Error:",e),t.showToast("Error during Unload!",{type:"danger"})}},y=h;return r.onLoad=R,r.onUnload=A,r.settings=y,r})({},vendetta.patcher,vendetta.metro,vendetta.metro.common,vendetta.ui.toasts,vendetta.plugin);
