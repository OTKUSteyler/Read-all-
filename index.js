(function(o,R,l,n,a,t,h){"use strict";const y=function(){const e=t.storage.enableReadAll??!0,r=function(){t.storage.enableReadAll=!e};return React.createElement(n.View,{style:{padding:16}},React.createElement(n.Text,{style:{fontSize:16,fontWeight:"bold",marginBottom:8}},"Read All Settings"),React.createElement(n.View,{style:{flexDirection:"row",alignItems:"center",marginBottom:16}},React.createElement(n.Text,{style:{flex:1}},'Enable "Read All" Functionality'),React.createElement(h.Switch,{value:e,onValueChange:r})))};let c;const A=function(){try{console.log("[Read All] Searching for message-related functions...");const e=l.findByProps("ack","ackMessage","acknowledge","markRead");console.log("[Read All] Found MessageActions:",e);const r=l.findByStore("MessageStore");if(console.log("[Read All] Found MessageStore:",r),!e||!r){console.error("[Read All] Could not find necessary message-related functions."),a.showToast("Error: Message functions not found!",{type:"danger"});return}const u=e.ack||e.ackMessage||e.acknowledge||e.markRead;if(!u){console.error("[Read All] No valid function found for marking messages as read."),a.showToast("Error: No valid message acknowledgment function found.",{type:"danger"});return}const g=l.findByProps("Guilds","GuildsList");if(!g?.Guilds){console.error("[Read All] 'Guilds' component not found."),a.showToast("Failed to find the server list UI.",{type:"danger"});return}t.storage.enableReadAll===void 0&&(t.storage.enableReadAll=!0),c=R.after("Guilds",g,function(p,s){let[w]=p;if(!s?.props?.children||!t.storage.enableReadAll)return s;const k=n.React.createElement(n.ReactNative.TouchableOpacity,{onPress:function(){try{const d=l.findByProps("getGuilds")?.getGuilds?.();if(!d){console.error("[Read All] No guilds found.");return}Object.values(d).forEach(function(v){const f=v.channels;f&&Object.values(f).forEach(function(i){i.is_read||(console.log(`[Read All] Marking channel ${i.id} as read.`),u(i.id))})}),a.showToast("All messages marked as read!",{type:"success"})}catch(d){console.error("[Read All] Error marking messages as read:",d),a.showToast("Error marking messages as read.",{type:"danger"})}},style:{marginBottom:10,padding:10,backgroundColor:"#5865F2",borderRadius:8,alignItems:"center"}},n.React.createElement(n.ReactNative.Text,{style:{color:"#FFFFFF",fontWeight:"bold"}},"\u{1F4E9} Read All"));return s.props.children.unshift(k),s}),console.log("[Read All] Plugin loaded successfully.")}catch(e){console.error("[Read All] Plugin Load Error:",e),a.showToast("Plugin Load Failed!",{type:"danger"})}},m=function(){try{c&&(c(),a.showToast("Plugin Successfully Unloaded!",{type:"success"}))}catch(e){console.error("[Read All] Unload Error:",e),a.showToast("Error during Unload!",{type:"danger"})}},E=y;return o.onLoad=A,o.onUnload=m,o.settings=E,o})({},vendetta.patcher,vendetta.metro,vendetta.metro.common,vendetta.ui.toasts,vendetta.plugin,vendetta.ui.components);
