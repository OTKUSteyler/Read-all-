(function(t,y,l,o,n,a,A){"use strict";const E=function(){const e=a.storage.enableReadAll??!0,r=function(){a.storage.enableReadAll=!e};return React.createElement(o.View,{style:{padding:16}},React.createElement(o.Text,{style:{fontSize:16,fontWeight:"bold",marginBottom:8}},"Read All Settings"),React.createElement(o.View,{style:{flexDirection:"row",alignItems:"center",marginBottom:16}},React.createElement(o.Text,{style:{flex:1}},'Enable "Read All" Functionality'),React.createElement(A.Switch,{value:e,onValueChange:r})))};let c;const m=function(){try{console.log("[Read All] Searching for message-related functions...");const e=l.findByProps("ack","ackMessage","markRead");if(console.log("[Read All] Found MessageActions:",e),!e){console.error("[Read All] Failed to find MessageActions."),n.showToast("Error: Message functions not found!",{type:"danger"});return}const r=e.ack||e.ackMessage||e.markRead;if(!r){console.error("[Read All] No valid function found for marking messages as read."),n.showToast("Error: No valid message acknowledgment function found.",{type:"danger"});return}const g=l.findByProps("Guilds","GuildsList");if(!g?.Guilds){console.error("[Read All] 'Guilds' component not found."),n.showToast("Failed to find the server list UI.",{type:"danger"});return}a.storage.enableReadAll===void 0&&(a.storage.enableReadAll=!0),c=y.after("Guilds",g,function(w,s){let[F]=w;if(!s?.props?.children||!a.storage.enableReadAll)return s;const k=o.React.createElement(o.ReactNative.TouchableOpacity,{onPress:function(){try{console.log("[Read All] Fetching all guilds...");const d=l.findByProps("getGuilds");if(!d){console.error("[Read All] GuildStore not found."),n.showToast("Error: Guilds not found!",{type:"danger"});return}const f=d.getGuilds();if(!f){console.error("[Read All] No guilds found."),n.showToast("Error: No guilds found!",{type:"danger"});return}Object.values(f).forEach(function(i){console.log(`[Read All] Processing guild: ${i.id} - ${i.name}`);const R=l.findByProps("getChannels");if(!R){console.error("[Read All] ChannelStore not found.");return}const h=R.getChannels(i.id);if(!h){console.error(`[Read All] No channels found for guild ${i.id}`);return}Object.values(h).forEach(function(u){u.is_read||(console.log(`[Read All] Marking channel ${u.id} as read.`),r(u.id))})}),n.showToast("All messages marked as read!",{type:"success"})}catch(d){console.error("[Read All] Error marking messages as read:",d),n.showToast("Error marking messages as read.",{type:"danger"})}},style:{marginBottom:10,padding:10,backgroundColor:"#5865F2",borderRadius:8,alignItems:"center"}},o.React.createElement(o.ReactNative.Text,{style:{color:"#FFFFFF",fontWeight:"bold"}},"\u{1F4E9} Read All"));return s.props.children.unshift(k),s}),console.log("[Read All] Plugin loaded successfully.")}catch(e){console.error("[Read All] Plugin Load Error:",e),n.showToast("Plugin Load Failed!",{type:"danger"})}},p=function(){try{c&&(c(),n.showToast("Plugin Successfully Unloaded!",{type:"success"}))}catch(e){console.error("[Read All] Unload Error:",e),n.showToast("Error during Unload!",{type:"danger"})}},v=E;return t.onLoad=m,t.onUnload=p,t.settings=v,t})({},vendetta.patcher,vendetta.metro,vendetta.metro.common,vendetta.ui.toasts,vendetta.plugin,vendetta.ui.components);
