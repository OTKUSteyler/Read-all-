(function(a,s,c,u){"use strict";const t=function(e){let n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"log";console[n](`[ReadAll] ${e}`)},o=s.findByProps("ack","getUnreadCount");o||t("\u274C ReadState module not found!","error");function l(){try{const e=o?.getGuilds?o.getGuilds():{};if(!e){t("\u26A0\uFE0F No guilds found to mark as read.","warn"),u.showToast("No unread messages.",{type:"info"});return}Object.values(e).forEach(function(n){o.ack(n.id)}),u.showToast("All messages marked as read!",{type:"success"})}catch(e){t(`\u274C Error marking messages as read: ${e}`,"error"),u.showToast("Failed to mark messages as read.",{type:"error"})}}const d=function(){return a.React.createElement(a.ReactNative.TouchableOpacity,{onPress:l,style:{backgroundColor:"#5865F2",padding:10,borderRadius:8,margin:8,alignItems:"center"}},a.React.createElement(a.ReactNative.Text,{style:{color:"white",fontWeight:"bold"}},"Read All"))};(function(){let e=0;const n=setInterval(function(){const i=s.findByName("GuildsNav",!1)||s.findByProps("GuildsNav");i?.default?(t("\u2705 Sidebar found, injecting button!"),c.after("default",i,function(p,r){return!r||!r.props||r.props.children.find(function(f){return f?.type===d})||r.props.children.push(a.React.createElement(d,null)),r}),clearInterval(n)):(t(`Sidebar not found, retrying... (${e}/10)`),++e>=10&&(t("\u274C ERROR: Sidebar not found. Aborting.","error"),clearInterval(n)))},1e3)})()})(vendetta.metro.common,vendetta.metro,vendetta.patcher,vendetta.ui.toasts);
