(function(o,g,i,e,a,n){"use strict";const f=function(){const[t,r]=e.React.useState(n.storage.enableReadAll??!0);return e.React.createElement(e.ReactNative.View,{style:{flex:1,justifyContent:"center",alignItems:"center",backgroundColor:"#1E1E1E",padding:20}},e.React.createElement(e.ReactNative.Text,{style:{color:"#FFFFFF",fontSize:18,fontWeight:"bold",marginBottom:20}},"\u{1F4E9} Read All Messages Plugin"),e.React.createElement(e.ReactNative.Switch,{value:t,onValueChange:function(s){r(s),n.storage.enableReadAll=s}}),e.React.createElement(e.ReactNative.Text,{style:{color:"#AAAAAA",marginTop:10}},t?"\u2705 Enabled":"\u274C Disabled"))};let d;const R=function(){try{a.showToast("\u{1F504} Loading Read All Messages Plugin...",{type:"info"}),console.log("[Read All] \u{1F50D} Searching for Discord functions...");const t=i.findByProps("bulkAck","ack","ackMessage","setReadState");if(!t||typeof t.ack!="function"){console.log("[Read All] \u274C Could not find `ack` function."),a.showToast("\u274C Discord function lookup failed! Plugin may not work.",{type:"danger"});return}console.log("[Read All] \u2705 Found Discord functions:",t);const r=i.findByProps("Guilds","GuildsList");if(!r?.Guilds){a.showToast("\u274C Failed to find the server list UI.",{type:"danger"});return}console.log("[Read All] \u2705 Found Guilds UI component."),n.storage.enableReadAll===void 0&&(n.storage.enableReadAll=!0),d=g.after("Guilds",r,function(s,c){let[E]=s;return!c?.props?.children||!n.storage.enableReadAll||c.props.children.unshift(e.React.createElement(e.ReactNative.View,{style:{position:"absolute",bottom:20,right:20,backgroundColor:"#5865F2",padding:12,borderRadius:50,alignItems:"center",elevation:5}},e.React.createElement(e.ReactNative.TouchableOpacity,{onPress:function(){try{console.log("[Read All] \u{1F4E8} Marking all messages as read...");const l=i.findByProps("getMutableGuilds")?.getMutableGuilds?.();if(!l)return;Object.keys(l).forEach(function(A){const u=l[A]?.channels?.find?.(function(F){return F.is_read===!1})?.id;u&&t.ack(u)}),a.showToast("\u2705 All messages marked as read!",{type:"success"})}catch(l){console.error("[Read All] \u274C Error:",l),a.showToast("\u274C Error marking messages as read.",{type:"danger"})}}},e.React.createElement(e.ReactNative.Text,{style:{color:"#FFFFFF",fontWeight:"bold"}},"\u{1F4E9}")))),c}),console.log("[Read All] \u2705 Plugin loaded successfully.")}catch(t){console.error("[Read All] \u274C Plugin Load Error:",t),a.showToast("\u274C Plugin Load Failed!",{type:"danger"})}},y=function(){try{d&&(d(),a.showToast("\u2705 Plugin Successfully Unloaded!",{type:"success"}))}catch(t){console.error("[Read All] \u274C Unload Error:",t),a.showToast("\u274C Error during Unload!",{type:"danger"})}},h=f;return o.onLoad=R,o.onUnload=y,o.settings=h,o})({},vendetta.patcher,vendetta.metro,vendetta.metro.common,vendetta.ui.toasts,vendetta.plugin);
