(function(l,f,d,t,a,n,R){"use strict";const h=function(){const e=n.storage.enableReadAll??!0,o=function(){n.storage.enableReadAll=!e};return React.createElement(t.View,{style:{padding:16}},React.createElement(t.Text,{style:{fontSize:16,fontWeight:"bold",marginBottom:8}},"Read All Settings"),React.createElement(t.View,{style:{flexDirection:"row",alignItems:"center",marginBottom:16}},React.createElement(t.Text,{style:{flex:1}},'Enable "Read All" Functionality'),React.createElement(R.Switch,{value:e,onValueChange:o})))};let i;const m=function(){try{const e=d.findByProps("messages","acknowledge","channel","messageActions","markRead");if(console.log("[Read All] Message Actions found:",e),!e){console.error("[Read All] Failed to find any message-related properties."),a.showToast("Error: Failed to find any message-related actions.",{type:"danger"});return}console.log("[Read All] All methods found in messageActions:",Object.keys(e));const o=e.ack||e.acknowledge||e.markRead;if(!o){console.error("[Read All] No valid method for marking messages as read."),a.showToast("Error: Could not find valid method for marking messages as read.",{type:"danger"});return}const c=d.findByProps("Guilds","GuildsList");if(!c?.Guilds){console.error("[Read All] 'Guilds' component not found in GuildsComponent:",c),a.showToast("Failed to find the server list UI.",{type:"danger"});return}n.storage.enableReadAll===void 0&&(n.storage.enableReadAll=!0),i=f.after("Guilds",c,function(p,r){let[b]=p;if(!r?.props?.children||!n.storage.enableReadAll)return r;const E=t.React.createElement(t.ReactNative.TouchableOpacity,{onPress:function(){try{const s=d.findByProps("getGuilds")?.getGuilds?.();if(!s){console.error("[Read All] No guilds found.");return}Object.values(s).forEach(function(v){const u=v.channels;u&&Object.values(u).forEach(function(g){g.is_read||(console.log(`[Read All] Marking channel ${g.id} as read.`),o?o(g.id):(console.error("[Read All] No suitable method found."),a.showToast("Error: No valid method to mark messages as read.",{type:"danger"})))})}),a.showToast("All messages marked as read!",{type:"success"})}catch(s){console.error("[Read All] Error marking messages as read:",s),a.showToast("Error marking messages as read.",{type:"danger"})}},style:{marginBottom:10,padding:10,backgroundColor:"#5865F2",borderRadius:8,alignItems:"center"}},t.React.createElement(t.ReactNative.Text,{style:{color:"#FFFFFF",fontWeight:"bold"}},"\u{1F4E9} Read All"));return r.props.children.unshift(E),r}),console.log("[Read All] Plugin loaded successfully.")}catch(e){console.error("[Read All] Plugin Load Error:",e),a.showToast("Plugin Load Failed!",{type:"danger"})}},y=function(){try{i&&(i(),a.showToast("Plugin Successfully Unloaded!",{type:"success"}))}catch(e){console.error("[Read All] Unload Error:",e),a.showToast("Error during Unload!",{type:"danger"})}},A=h;return l.onLoad=m,l.onUnload=y,l.settings=A,l})({},vendetta.patcher,vendetta.metro,vendetta.metro.common,vendetta.ui.toasts,vendetta.plugin,vendetta.ui.components);
